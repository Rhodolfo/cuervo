read_excel(paste0('\\\\192.168.1.60\\unes\\',lista_unes[contador_unes],'\\Pedidos\\',archivos))
#
rutas
read_excel(paste0('\\\\192.168.1.60\\unes\\',lista_unes[contador_unes],'\\Pedidos\\',archivos),1)
#
rutas<-list()
#
rutas<-list()
for(i in 1:50){
rutas[[i]]<-read_excel(paste0('\\\\192.168.1.60\\unes\\',lista_unes[contador_unes],'\\Pedidos\\',archivos),1)
}
rutas[[1]]
for(i in 1:50){
print(names(rutas[[i]]))
}
#
rutas<-list()
for(i in 1:100){
rutas[[i]]<-read_excel(paste0('\\\\192.168.1.60\\unes\\',lista_unes[contador_unes],'\\Pedidos\\',archivos),1)
}
#
rutas<-list()
for(i in 1:50){
rutas[[i]]<-read_excel(paste0('\\\\192.168.1.60\\unes\\',lista_unes[contador_unes],'\\Pedidos\\',archivos),i)
}
for(i in 1:50){
print(names(rutas[[i]]))
}
for(i in 1:50){
print(sum(names(rutas[[i]]) == names(rutas[[1]])))
}
for(i in 1:50){
print(i)
print(sum(names(rutas[[i]]) == names(rutas[[1]])))
}
for(i in 1:50){
cat('\n')
print(i)
print(sum(names(rutas[[i]]) == names(rutas[[1]])))
}
tabla_total[[iii]] <-  read_excel_allsheets(paste0('\\\\192.168.1.60\\unes\\',lista_unes[contador_unes],'\\Pedidos\\',archivos))
runApp('aplicaciones/app_sellorojo_unes/shiny')
fechas
knitr::opts_chunk$set(echo = FALSE,warning = FALSE,message = FALSE)
library(dplyr)
library(formattable)
library(readxl)
library(stringr)
library(ggplot2)
library(reshape2)
source('funciones.R',encoding = 'utf-8')
track <- readRDS('track_agosto.rds')
track_original <- read_excel('consulta_prueba.xlsm',sheet = 'RawData') %>%  #carga
as.data.frame %>%
setNames(                             #nombres
.,str_replace_all(names(.),' ','_')
)
fechas <- track %>%
filter(ZnVtaCteSo == 'USA') %>%
select(contains('Fe'),-contains('AWD'),-contains('BOOK'),contains('Lib'),-contains('Imp.Trans')) %>%
filter(!is.na(Fecha_Fact.))
funcion_graficas_coherencia_continua_fecha_preferente(fechas,'USA')
fechas
head(fechas)
fechas <- track %>%
filter(ZnVtaCteSo == 'USA') %>%
select(contains('Fe'),-contains('AWD'),-contains('BOOK'),contains('Lib'),-contains('Imp.Trans')) %>%
filter(!is.na(Fe.Orig.Pref))
funcion_graficas_coherencia_continua_fecha_preferente(fechas,'USA')
head(fechas)
fechas <- track %>%
filter(ZnVtaCteSo == 'USA') %>%
select(contains('Fe'),-contains('AWD'),-contains('BOOK'),contains('Lib'),-contains('Imp.Trans')) %>%
filter(!is.na(Fe.Orig.Pref)) %>%
filter(!is.na(Fecha_Fact.))
funcion_graficas_coherencia_continua_fecha_preferente(fechas,'USA')
fechas <- fechas %>%
filter(!is.na(Fec._Entr._PT))
funcion_graficas_coherencia_continua_fecha_preferente<- function(fechas,titulo){
# summary(fechas)
fechas <- fechas
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fe.Orig.Pref),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fe.Orig.Pref),
Fecha_Captura_SAP = as.numeric(Fecha_Captura_SAP - Fe.Orig.Pref),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fe.Orig.Pref),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fe.Orig.Pref),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fe.Orig.Pref),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fe.Orig.Pref),
Fecha_cruce = as.numeric(Fecha_cruce - Fe.Orig.Pref),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fe.Orig.Pref),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fe.Orig.Pref),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fe.Orig.Pref),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fe.Orig.Pref),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fe.Orig.Pref),
Lib.Calidad = as.numeric(Lib.Calidad - Fe.Orig.Pref),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fe.Orig.Pref),
Fe.Orig.Pref = 0
)
n<-fechas_temp
o <- n %>%
summarise_all(mean,na.rm=T) %>% unlist
p <- melt(n)
p$media <- o[match(p$variable,names(o))]
p$constante <- 13.5
q <- p %>%
select(variable,media,constante) %>%
distinct
g <- ggplot(p,aes(reorder(variable,-media),value)) +
geom_boxplot() +
geom_jitter(width = 0.1,height = .1,alpha = .1,color = 'dodgerblue',size=.5) +
geom_text(data = q, aes(reorder(variable,-media),max(p$value,na.rm=T),label = paste0('media: ',round(media,3)))) +
ggtitle(paste0('Coherencias ', titulo)) +
xlab('proceso') +
ylab('orden de ejecución') +
coord_flip()
return(g)
}
fechas <- track %>%
filter(ZnVtaCteSo == 'USA') %>%
select(contains('Fe'),-contains('AWD'),-contains('BOOK'),contains('Lib'),-contains('Imp.Trans')) %>%
filter(!is.na(Fecha_Captura_SAP)) %>%
filter(!is.na(Fecha_Fact.))
head(fechas)
funcion_graficas_coherencia_continua_fecha_captura(fechas,'USA')
funcion_graficas_coherencia_continua_fecha_captura<- function(fechas,titulo){
# summary(fechas)
fechas <- fechas
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
Fe.Orig.Pref = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
n<-fechas_temp
o <- n %>%
summarise_all(mean,na.rm=T) %>% unlist
p <- melt(n)
p$media <- o[match(p$variable,names(o))]
p$constante <- 13.5
q <- p %>%
select(variable,media,constante) %>%
distinct
g <- ggplot(p,aes(reorder(variable,-media),value)) +
geom_boxplot() +
geom_jitter(width = 0.1,height = .1,alpha = .1,color = 'dodgerblue',size=.5) +
geom_text(data = q, aes(reorder(variable,-media),max(p$value,na.rm=T),label = paste0('media: ',round(media,3)))) +
ggtitle(paste0('Coherencias ', titulo)) +
xlab('proceso') +
ylab('orden de ejecución') +
coord_flip()
return(g)
}
funcion_graficas_coherencia_continua_fecha_captura(fechas,'USA')
head(fechas)
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
Fe.Orig.Pref = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
str(fechas)
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
Fe.Orig.Pref = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
fechas <- track %>%
filter(ZnVtaCteSo == 'USA') %>%
select(contains('Fe'),-contains('AWD'),-contains('BOOK'),contains('Lib'),-contains('Imp.Trans')) %>%
filter(!is.na(Fe.Orig.Pref)) %>%
filter(!is.na(Fecha_Fact.))
funcion_graficas_coherencia_continua_fecha_captura(fechas,'USA')
head(fechas)
fechas %>% group_by(Fe.Orig.Pref,Fecha_Fact.) %>% summarise(conteo=n())
fechas %>% group_by(Fe.Orig.Pref,Fecha_Fact.) %>% summarise(conteo=n()) %>% as.data.frame()
str(fechas)
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
Fe.Orig.Pref = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
# Fe.Orig.Pref = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
summary(fechas_temp$Fecha_Captura_SAP)
fechas <- track %>%
filter(ZnVtaCteSo == 'USA') %>%
select(contains('Fe'),-contains('AWD'),-contains('BOOK'),contains('Lib'),-contains('Imp.Trans')) %>%
filter(!is.na(Fe.Orig.Pref)) %>%
filter(!is.na(Fecha_Fact.))
summary(fechas$Fecha_Captura_SAP)
summary(fechas$Fe.Orig.Pref)
fechas$Fe.Orig.Pref-fechas$Fecha_Captura_SAP
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
Fe.Orig.Pref = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
names(fechas)
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
Fe.Orig.Pref = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
Fe.Orig.Pref = as.numeric( Fecha_Captura_SAP - Fe.Orig.Pref),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
Fe.Orig.Pref = as.numeric(as.Date(Fe.Orig.Pref) - Fecha_Captura_SAP),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
Fe.Orig.Pref = as.numeric(as.Date(Fe.Orig.Pref) - as.Date(Fecha_Captura_SAP)),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fe.Orig.Pref = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
summary(fechas_temp)
fechas <- track %>%
filter(ZnVtaCteSo == 'USA') %>%
select(contains('Fe'),-contains('AWD'),-contains('BOOK'),contains('Lib'),-contains('Imp.Trans')) %>%
filter(!is.na(Fe.Orig.Pref))
summary(fechas_temp)
naems(Track)
naems(Track)
names(track)
fechas <- track %>%
filter(ZnVtaCteSo == 'USA') %>
fechas <- track %>%
filter(ZnVtaCteSo == 'USA') %>
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fe.Orig.Pref),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fe.Orig.Pref),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fe.Orig.Pref),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fe.Orig.Pref),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fe.Orig.Pref),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fe.Orig.Pref),
Fecha_cruce = as.numeric(Fecha_cruce - Fe.Orig.Pref),
Fec._Entr._PT = as.numeric(Fec._Entr._PT - Fe.Orig.Pref),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fe.Orig.Pref),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fe.Orig.Pref),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fe.Orig.Pref),
Fecha_de_Programación = as.numeric(Fecha_de_Programación - Fe.Orig.Pref),
Lib.Calidad = as.numeric(Lib.Calidad - Fe.Orig.Pref),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fe.Orig.Pref),
Fecha_Captura_SAP = as.numeric(Fecha_Captura_SAP - Fe.Orig.Pref),
Fe.Orig.Pref = 0
)
track %>% filter(Pedido_SAP == 4700849283)
shiny::runApp('repositorios/cuervo/shiny')
excel_parametros
runApp('repositorios/cuervo/shiny')
runApp('repositorios/cuervo/shiny')
library(shinydashboard)
library(stringr)
library(shinyWidgets)
library(readr)
library(readxl)
library(ggplot2)
library(lubridate)
library(formattable)
library(tidyr)
library(plyr)
library(dplyr)
library(RColorBrewer)
source('gs.R', encoding = "UTF-8")
# source('proceso.R', encoding = "UTF-8")
# source('grafica_fill_rate.R', encoding = "UTF-8")
# source('mapa.R', encoding = "UTF-8")
source('funciones_de_carga.R', encoding = "UTF-8")
source('funciones_graficas.R', encoding = "UTF-8")
source('funciones_interfaz.R', encoding = "UTF-8")
excel_parametros <- read_excel('datos/setup/parametros.xlsx') %>% data.frame
for(i in 1:nrow(excel_parametros)){
for(j in 1:length(excel_parametros)){
excel_parametros[i,j] <- str_replace_all(excel_parametros[i,j],' ','_')
}
}
setwd("~/repositorios/cuervo/shiny")
library(shinydashboard)
library(stringr)
library(shinyWidgets)
library(readr)
library(readxl)
library(ggplot2)
library(lubridate)
library(formattable)
library(tidyr)
library(plyr)
library(dplyr)
library(RColorBrewer)
source('gs.R', encoding = "UTF-8")
# source('proceso.R', encoding = "UTF-8")
# source('grafica_fill_rate.R', encoding = "UTF-8")
# source('mapa.R', encoding = "UTF-8")
source('funciones_de_carga.R', encoding = "UTF-8")
source('funciones_graficas.R', encoding = "UTF-8")
source('funciones_interfaz.R', encoding = "UTF-8")
excel_parametros <- read_excel('datos/setup/parametros.xlsx') %>% data.frame
for(i in 1:nrow(excel_parametros)){
for(j in 1:length(excel_parametros)){
excel_parametros[i,j] <- str_replace_all(excel_parametros[i,j],' ','_')
}
}
parametros <- list()
row_fechas = excel_parametros %>%
dplyr::filter(!is.na(row_fechas)) %>%
dplyr::select(row_fechas) %>%
unlist %>%
c
praametros$row_fechas
parametros <- list()
row_fechas
str(row_fechas)
excel_parametros %>%
dplyr::filter(!is.na(row_fechas)) %>%
dplyr::select(row_fechas)
excel_parametros %>%
dplyr::filter(!is.na(row_fechas)) %>%
dplyr::select(row_fechas) %>%
c
runApp()
domestico_fechas = excel_parametros %>%
dplyr::filter(!is.na(domestico_fechas)) %>%
dplyr::select(domestico_fechas) %>%
c
domestico_fechas = excel_parametros %>%
dplyr::filter(!is.na(domestico_fechas)) %>%
dplyr::select(domestico_fechas) %>%
c %>%
unlist
domestico_fechas
domestico_cantidades = excel_parametros %>%
dplyr::filter(!is.na(domestico_cantidades)) %>%
dplyr::select(domestico_cantidades) %>%
unlist
domestico_fechas = excel_parametros %>%
dplyr::filter(!is.na(domestico_fechas)) %>%
dplyr::select(domestico_fechas) %>%
unlist %>%
as.character
runApp()
runApp()
runApp('~/repositorios/gastos_arena')
runApp('~/repositorios/gastos_arena')
runApp('~/repositorios/gastos_arena')
runApp('~/repositorios/gastos_arena')
runApp()
