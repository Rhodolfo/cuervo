Fecha_cruce = as.numeric(Fecha_cruce - Fe.Orig.Pref),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fe.Orig.Pref),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fe.Orig.Pref),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fe.Orig.Pref),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fe.Orig.Pref),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fe.Orig.Pref),
Lib.Calidad = as.numeric(Lib.Calidad - Fe.Orig.Pref),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fe.Orig.Pref),
Fe.Orig.Pref = 0
)
n<-fechas_temp
o <- n %>%
summarise_all(mean,na.rm=T) %>% unlist
p <- melt(n)
p$media <- o[match(p$variable,names(o))]
p$constante <- 13.5
q <- p %>%
select(variable,media,constante) %>%
distinct
g <- ggplot(p,aes(reorder(variable,-media),value)) +
geom_boxplot() +
geom_jitter(width = 0.1,height = .1,alpha = .1,color = 'dodgerblue',size=.5) +
geom_text(data = q, aes(reorder(variable,-media),max(p$value,na.rm=T),label = paste0('media: ',round(media,3)))) +
ggtitle(paste0('Coherencias ', titulo)) +
xlab('proceso') +
ylab('orden de ejecución') +
coord_flip()
return(g)
}
fechas <- track %>%
filter(ZnVtaCteSo == 'USA') %>%
select(contains('Fe'),-contains('AWD'),-contains('BOOK'),contains('Lib'),-contains('Imp.Trans')) %>%
filter(!is.na(Fecha_Captura_SAP)) %>%
filter(!is.na(Fecha_Fact.))
head(fechas)
funcion_graficas_coherencia_continua_fecha_captura(fechas,'USA')
funcion_graficas_coherencia_continua_fecha_captura<- function(fechas,titulo){
# summary(fechas)
fechas <- fechas
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
Fe.Orig.Pref = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
n<-fechas_temp
o <- n %>%
summarise_all(mean,na.rm=T) %>% unlist
p <- melt(n)
p$media <- o[match(p$variable,names(o))]
p$constante <- 13.5
q <- p %>%
select(variable,media,constante) %>%
distinct
g <- ggplot(p,aes(reorder(variable,-media),value)) +
geom_boxplot() +
geom_jitter(width = 0.1,height = .1,alpha = .1,color = 'dodgerblue',size=.5) +
geom_text(data = q, aes(reorder(variable,-media),max(p$value,na.rm=T),label = paste0('media: ',round(media,3)))) +
ggtitle(paste0('Coherencias ', titulo)) +
xlab('proceso') +
ylab('orden de ejecución') +
coord_flip()
return(g)
}
funcion_graficas_coherencia_continua_fecha_captura(fechas,'USA')
head(fechas)
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
Fe.Orig.Pref = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
str(fechas)
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
Fe.Orig.Pref = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
fechas <- track %>%
filter(ZnVtaCteSo == 'USA') %>%
select(contains('Fe'),-contains('AWD'),-contains('BOOK'),contains('Lib'),-contains('Imp.Trans')) %>%
filter(!is.na(Fe.Orig.Pref)) %>%
filter(!is.na(Fecha_Fact.))
funcion_graficas_coherencia_continua_fecha_captura(fechas,'USA')
head(fechas)
fechas %>% group_by(Fe.Orig.Pref,Fecha_Fact.) %>% summarise(conteo=n())
fechas %>% group_by(Fe.Orig.Pref,Fecha_Fact.) %>% summarise(conteo=n()) %>% as.data.frame()
str(fechas)
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
Fe.Orig.Pref = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
# Fe.Orig.Pref = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
summary(fechas_temp$Fecha_Captura_SAP)
fechas <- track %>%
filter(ZnVtaCteSo == 'USA') %>%
select(contains('Fe'),-contains('AWD'),-contains('BOOK'),contains('Lib'),-contains('Imp.Trans')) %>%
filter(!is.na(Fe.Orig.Pref)) %>%
filter(!is.na(Fecha_Fact.))
summary(fechas$Fecha_Captura_SAP)
summary(fechas$Fe.Orig.Pref)
fechas$Fe.Orig.Pref-fechas$Fecha_Captura_SAP
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
Fe.Orig.Pref = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
names(fechas)
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
Fe.Orig.Pref = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
Fe.Orig.Pref = as.numeric( Fecha_Captura_SAP - Fe.Orig.Pref),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
Fe.Orig.Pref = as.numeric(as.Date(Fe.Orig.Pref) - Fecha_Captura_SAP),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
Fe.Orig.Pref = as.numeric(as.Date(Fe.Orig.Pref) - as.Date(Fecha_Captura_SAP)),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fecha_Captura_SAP),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fecha_Captura_SAP),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fecha_Captura_SAP),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fecha_Captura_SAP),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fecha_Captura_SAP),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fecha_Captura_SAP),
Fecha_cruce = as.numeric(Fecha_cruce - Fecha_Captura_SAP),
Fec._Entr._PT = as.numeric(Fecha_de_Programación - Fecha_Captura_SAP),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fecha_Captura_SAP),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fecha_Captura_SAP),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fecha_Captura_SAP),
Fecha_de_Programación = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Lib.Calidad = as.numeric(Lib.Calidad - Fecha_Captura_SAP),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fecha_Captura_SAP),
Fe.Orig.Pref = as.numeric(Fe.Orig.Pref - Fecha_Captura_SAP),
Fecha_Captura_SAP = 0
)
summary(fechas_temp)
fechas <- track %>%
filter(ZnVtaCteSo == 'USA') %>%
select(contains('Fe'),-contains('AWD'),-contains('BOOK'),contains('Lib'),-contains('Imp.Trans')) %>%
filter(!is.na(Fe.Orig.Pref))
summary(fechas_temp)
naems(Track)
naems(Track)
names(track)
fechas <- track %>%
filter(ZnVtaCteSo == 'USA') %>
fechas <- track %>%
filter(ZnVtaCteSo == 'USA') %>
fechas_temp <- fechas %>%
mutate(
Fecha_Carga = as.numeric(Fecha_Carga - Fe.Orig.Pref),
Fecha_Disponibilidad = as.numeric(Fecha_Disponibilidad - Fe.Orig.Pref),
Fec._Entrega_a_Cte. = as.numeric(Fec._Entrega_a_Cte. - Fe.Orig.Pref),
Fecha_Entrega = as.numeric(Fecha_Entrega - Fe.Orig.Pref),
Fecha_Planeación_Transporte = as.numeric(Fecha_Planeación_Transporte - Fe.Orig.Pref),
Fecha_Fact. = as.numeric(Fecha_Fact. - Fe.Orig.Pref),
Fecha_cruce = as.numeric(Fecha_cruce - Fe.Orig.Pref),
Fec._Entr._PT = as.numeric(Fec._Entr._PT - Fe.Orig.Pref),
Fe_Imp.Fact. = as.numeric(Fe_Imp.Fact. - Fe.Orig.Pref),
Fecha_Rec.BL = as.numeric(Fecha_Rec.BL- Fe.Orig.Pref),
Fe.Guia_Fedex = as.numeric(Fe.Guia_Fedex - Fe.Orig.Pref),
Fecha_de_Programación = as.numeric(Fecha_de_Programación - Fe.Orig.Pref),
Lib.Calidad = as.numeric(Lib.Calidad - Fe.Orig.Pref),
Fecha_Pedido = as.numeric(Fecha_Pedido - Fe.Orig.Pref),
Fecha_Captura_SAP = as.numeric(Fecha_Captura_SAP - Fe.Orig.Pref),
Fe.Orig.Pref = 0
)
track %>% filter(Pedido_SAP == 4700849283)
shiny::runApp('repositorios/cuervo/shiny')
runApp('repositorios/cuervo/shiny')
runApp('repositorios/cuervo/shiny')
runApp('repositorios/cuervo/shiny')
runApp('repositorios/cuervo/shiny')
tablas$zsdr141 <- funcion_carga_datos('zsdr141','zsdr141')
tablas$zsdr141 <- funcion_ano_mes(tablas$zsdr141)
tablas <- list()
tablas$zsdr141 <- funcion_carga_datos('zsdr141','zsdr141')
tablas$zsdr141 <- funcion_ano_mes(tablas$zsdr141)
library(shinydashboard)
library(shinyWidgets)
library(readr)
library(readxl)
library(ggplot2)
library(lubridate)
library(formattable)
library(plyr)
library(dplyr)
library(RColorBrewer)
source('gs.R', encoding = "UTF-8")
source('proceso.R', encoding = "UTF-8")
source('grafica_fill_rate.R', encoding = "UTF-8")
source('mapa.R', encoding = "UTF-8")
source('funciones_de_carga.R', encoding = "UTF-8")
source('funciones_graficas.R', encoding = "UTF-8")
prelogged <- FALSE
tablas$zsdr141 <- funcion_carga_datos('zsdr141','zsdr141')
setwd("~/repositorios/cuervo/shiny")
tablas$zsdr141 <- funcion_carga_datos('zsdr141','zsdr141')
tablas$zsdr141 <- funcion_ano_mes(tablas$zsdr141)
tablas$zsdr159 <- funcion_carga_datos('zsdr159','zsdr159')
tablas$zsdr159 <- funcion_ano_mes(tablas$zsdr159)
p_compresion <- FALSE
p_fecha_focal <- 'fecha_pedido'
tablas$vis <- tablas$zsdr159
funcion_grafica_tiempos_grande(tablas$vis, p_fecha_focal, p_compresion, 'días', 'tablas (con diferentes grados de información')
p_fecha_focal = 'fecha_creacion_min'
funcion_grafica_tiempos_grande(tablas$vis, p_fecha_focal, p_compresion, 'días', 'tablas (con diferentes grados de información')
p_fecha_focal
p_compresion
head(tabla$vis)
head(tablas$vis)
p_tabla <- tablas$vis
if(p_compresion){
p_tabla <- funcion_compresion_fecha(p_tabla, 'pedido_sap')
}
f_tabla_centrada <- funcion_fechas_centradas(p_tabla,p_fecha_focal)
f_tabla <- funcion_extrae_fechas(p_tabla)
f_fechas <- names(f_tabla)
f_fechas <- f_fechas[-match(p_fecha_focal,f_fechas)]
p_fecha_focal
f_fechas
names(f_tabla)
names(p_tabla)
f_fechas <- names(f_tabla)
f_fechas
match(p_fecha_focal,f_fechas)
p_compresion <- TRUE
p_tabla <- tablas$vis
if(p_compresion){
p_tabla <- funcion_compresion_fecha(p_tabla, 'pedido_sap')
}
head(p_tabla)
p_fecha_focal <- 'fecha_creacion_min'
f_tabla_centrada <- funcion_fechas_centradas(p_tabla,p_fecha_focal)
funcion_grafica_tiempos_grande(tablas$vis, p_fecha_focal, p_compresion, 'días', 'tablas (con diferentes grados de información')
library(shinydashboard)
library(shinyWidgets)
library(readr)
library(readxl)
library(ggplot2)
library(lubridate)
library(formattable)
library(plyr)
library(dplyr)
library(RColorBrewer)
source('gs.R', encoding = "UTF-8")
source('proceso.R', encoding = "UTF-8")
source('grafica_fill_rate.R', encoding = "UTF-8")
source('mapa.R', encoding = "UTF-8")
source('funciones_de_carga.R', encoding = "UTF-8")
source('funciones_graficas.R', encoding = "UTF-8")
prelogged <- FALSE
tablas <- list()
tablas$zsdr141 <- funcion_carga_datos('zsdr141','zsdr141')
tablas$zsdr141 <- funcion_ano_mes(tablas$zsdr141)
tablas$zsdr159 <- funcion_carga_datos('zsdr159','zsdr159')
tablas$zsdr159 <- funcion_ano_mes(tablas$zsdr159)
tablas$ano_mes <- base::intersect(unique(tablas$zsdr141$ano_mes),unique(tablas$zsdr159$ano_mes))
p_fecha_focal = 'fecha_creacion_min'
p_compresion <- TRUE
funcion_grafica_tiempos_grande(tablas$vis, p_fecha_focal, p_compresion, 'días', 'tablas (con diferentes grados de información')
tablas$vis <- tablas$zsdr159
funcion_grafica_tiempos_grande(tablas$vis, p_fecha_focal, p_compresion, 'días', 'tablas (con diferentes grados de información')
runApp()
tablas <- list()
tablas$zsdr141 <- funcion_carga_datos('zsdr141','zsdr141')
tablas$zsdr141 <- funcion_ano_mes(tablas$zsdr141)
tablas$zsdr159 <- funcion_carga_datos('zsdr159','zsdr159')
tablas$zsdr159 <- funcion_ano_mes(tablas$zsdr159)
tablas$ano_mes <- base::intersect(unique(tablas$zsdr141$ano_mes),unique(tablas$zsdr159$ano_mes))
tablas$vis <- tablas$zsdr159
p_compresion <- FALSE
p_fecha_focal <- 'fecha_pedido'
funcion_grafica_tiempos_grande(tablas$vis, p_fecha_focal, p_compresion, 'días', 'tablas (con diferentes grados de información')
p_tabla <- tablas$zsdr159
if(p_compresion){
p_tabla <- funcion_compresion_fecha(p_tabla, 'pedido_sap')
}
f_tabla_centrada <- funcion_fechas_centradas(p_tabla,p_fecha_focal)
f_tabla_centrada <- funcion_fechas_centradas(p_tabla,p_fecha_focal)
funcion_fechas_centradas <- function(p_tabla,p_fecha_focal){
f_tabla <- funcion_extrae_fechas(p_tabla)
cat(names(f_tabla))
f_fechas <- names(f_tabla)
cat(f_fechas)
f_fechas <- f_fechas[-match(p_fecha_focal,f_fechas)]
cat(f_fechas)
f_funcion_1 <- 'f_tabla_transformada <- f_tabla %>% mutate('
f_funcion_2 <- paste0(c(f_fechas,p_fecha_focal),' = as.numeric(', c(f_fechas,p_fecha_focal), ' - ', p_fecha_focal,')',collapse = ',')
f_funcion_3 <- ')'
f_funcion_completa <- paste0(f_funcion_1,f_funcion_2,f_funcion_3)
eval(parse(text = f_funcion_completa))
f_tabla_transformada <- cbind(p_tabla[,match(p_fecha_focal,names(p_tabla))],f_tabla_transformada)
names(f_tabla_transformada)[1] <- 'fecha_inicio'
f_tabla_transformada <- cbind(p_tabla$pedido_sap,f_tabla_transformada)
names(f_tabla_transformada)[1] <- 'pedido'
f_tabla_transformada <- data.frame(f_tabla_transformada)
f_tabla_transformada <- do.call(data.frame,lapply(f_tabla_transformada, function(x) replace(x, is.infinite(x),NA)))
return(f_tabla_transformada)
}
f_tabla_centrada <- funcion_fechas_centradas(p_tabla,p_fecha_focal)
funcion_fechas_centradas <- function(p_tabla,p_fecha_focal){
f_tabla <- funcion_extrae_fechas(p_tabla)
cat(names(f_tabla))
cat('\n')
f_fechas <- names(f_tabla)
cat(f_fechas)
cat('\n')
cat(p_fecha_focal)
cat('\n')
f_fechas <- f_fechas[-match(p_fecha_focal,f_fechas)]
cat(f_fechas)
cat('\n')
f_funcion_1 <- 'f_tabla_transformada <- f_tabla %>% mutate('
f_funcion_2 <- paste0(c(f_fechas,p_fecha_focal),' = as.numeric(', c(f_fechas,p_fecha_focal), ' - ', p_fecha_focal,')',collapse = ',')
f_funcion_3 <- ')'
f_funcion_completa <- paste0(f_funcion_1,f_funcion_2,f_funcion_3)
eval(parse(text = f_funcion_completa))
f_tabla_transformada <- cbind(p_tabla[,match(p_fecha_focal,names(p_tabla))],f_tabla_transformada)
names(f_tabla_transformada)[1] <- 'fecha_inicio'
f_tabla_transformada <- cbind(p_tabla$pedido_sap,f_tabla_transformada)
names(f_tabla_transformada)[1] <- 'pedido'
f_tabla_transformada <- data.frame(f_tabla_transformada)
f_tabla_transformada <- do.call(data.frame,lapply(f_tabla_transformada, function(x) replace(x, is.infinite(x),NA)))
return(f_tabla_transformada)
}
f_tabla_centrada <- funcion_fechas_centradas(p_tabla,p_fecha_focal)
head(tablas$vis)
p_fecha_focal = 'fecha_creacion_min'
p_compresion <- TRUE
funcion_grafica_tiempos_grande(tablas$vis, p_fecha_focal, p_compresion, 'días', 'tablas (con diferentes grados de información')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/aplicaciones/app_sellorojo_unes/shiny')
runApp('~/aplicaciones/app_sellorojo_unes/shiny')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
update()
update.packages()
install.packages('openssl')
install.packages("openssl")
install.packages('curl')
install.packages('Rcpp')
install.packages('httpuv')
install.packages('mime')
install.packages('rlang')
install.packages('tibble')
install.packages('xml2')
install.packages('zoo')
