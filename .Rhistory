parametros$usa_cantidades_cerrado = excel_parametros %>%     # cantidades cerrado
dplyr::filter(!is.na(usa_cantidades)) %>%
dplyr::select(usa_cantidades) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$row_cantidades_cerrado = excel_parametros %>%
dplyr::filter(!is.na(row_cantidades)) %>%
dplyr::select(row_cantidades) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$domestico_cantidades_cerrado = excel_parametros %>%
dplyr::filter(!is.na(domestico_cantidades)) %>%
dplyr::select(domestico_cantidades) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$usa_fechas_benchmark = excel_parametros %>%
dplyr::filter(!is.na(usa_fechas_benchmark)) %>%
dplyr::select(usa_fechas_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$row_fechas_benchmark = excel_parametros %>%
dplyr::filter(!is.na(row_fechas_benchmark)) %>%
dplyr::select(row_fechas_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$domestico_fechas_benchmark = excel_parametros %>%
dplyr::filter(!is.na(domestico_fechas_benchmark)) %>%
dplyr::select(domestico_fechas_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$usa_cantidad_benchmark = excel_parametros %>%                    # cantidad benchmarck
dplyr::filter(!is.na(usa_cantidad_benchmark)) %>%
dplyr::select(usa_cantidad_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$row_cantidad_benchmark = excel_parametros %>%
dplyr::filter(!is.na(row_cantidad_benchmark)) %>%
dplyr::select(row_cantidad_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$domestico_cantidad_benchmark = excel_parametros %>%
dplyr::filter(!is.na(domestico_cantidad_benchmark)) %>%
dplyr::select(domestico_cantidad_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
tablas <- list()
tablas$usa <- funcion_cargar_datos(parametros$usa_carpeta,parametros$usa_fechas,parametros$usa_cantidades,parametros$usa_filtros,parametros$usa_pedido, parametros$usa_fechas_benchmark) %>%
dplyr::filter(Zona_de_ventas != 'ninguno') %>%
dplyr::filter(Nombre_Región == 'USA')
tablas$row <- funcion_cargar_datos(parametros$row_carpeta,parametros$row_fechas,parametros$row_cantidades,parametros$row_filtros,parametros$row_pedido, parametros$row_fechas_benchmark) %>%
dplyr::filter(Zona_de_ventas != 'ninguno') %>%
dplyr::filter(Nombre_Región != 'USA')
tablas$domestico <- funcion_cargar_datos(parametros$domestico_carpeta,parametros$domestico_fechas,parametros$domestico_cantidades,parametros$domestico_filtros,parametros$domestico_pedido, parametros$domestico_fechas_benchmark)
if(str_detect(excel_parametros$domestico_benchmark_formula[1],'formula')){   # viendo el pedo de una variable custom
parametros$domestico_fechas_benchmark <- 'fecha_dom_bench_custom'
eval(parse(text = paste0(
'tablas$domestico <- tablas$domestico %>%
mutate(
fecha_dom_bench_custom = ',parametros$domestico_fechas[1],' + 5
)'
)))
}
parametros
runApp()
runApp()
runApp()
runApp()
runApp()
runGitHub("cuervo", "pelishk", ref = 'vista_ejecutiva')
runApp()
runApp()
library(shinydashboard)
library(stringr)
library(shinyWidgets)
library(readr)
library(readxl)
library(ggplot2)
library(plotly)
library(lubridate)
library(formattable)
library(tidyr)
library(plyr)
library(dplyr)
library(RColorBrewer)
# source('gs.R', encoding = "UTF-8") #mientras vemos qué pedo
nube_cuervo_usuarios <- read_csv('datos/contrasenas.csv')
# source('proceso.R', encoding = "UTF-8")
# source('grafica_fill_rate.R', encoding = "UTF-8")
# source('mapa.R', encoding = "UTF-8")
source('funciones_de_carga.R', encoding = "UTF-8")
source('funciones_graficas.R', encoding = "UTF-8")
source('funciones_interfaz.R', encoding = "UTF-8")
source('funciones_extra.R', encoding = "UTF-8")
excel_parametros <- read_excel('datos/setup/parametros.xlsx') %>% data.frame
for(i in 1:nrow(excel_parametros)){
for(j in 1:length(excel_parametros)){
excel_parametros[i,j] <- str_replace_all(excel_parametros[i,j],' ','_')
}
}
parametros <- list()
parametros$domestico_fechas = excel_parametros %>%        #fechas
dplyr::filter(!is.na(domestico_fechas)) %>%
dplyr::select(domestico_fechas) %>%
unlist %>%
as.character
parametros$usa_fechas = excel_parametros %>%
dplyr::filter(!is.na(usa_fechas)) %>%
dplyr::select(usa_fechas) %>%
unlist %>%
as.character
parametros$row_fechas = excel_parametros %>%
dplyr::filter(!is.na(row_fechas)) %>%
dplyr::select(row_fechas) %>%
unlist %>%
as.character
parametros$domestico_cantidades = excel_parametros %>%     # cantidades
dplyr::filter(!is.na(domestico_cantidades)) %>%
dplyr::select(domestico_cantidades) %>%
unlist %>%
as.character
parametros$usa_cantidades = excel_parametros %>%
dplyr::filter(!is.na(usa_cantidades)) %>%
dplyr::select(usa_cantidades) %>%
unlist %>%
as.character
parametros$row_cantidades = excel_parametros %>%
dplyr::filter(!is.na(row_cantidades)) %>%
dplyr::select(row_cantidades) %>%
unlist %>%
as.character
parametros$domestico_filtros = excel_parametros %>%         # filtros
dplyr::filter(!is.na(domestico_filtros)) %>%
dplyr::select(domestico_filtros) %>%
unlist %>%
as.character
parametros$usa_filtros = excel_parametros %>%
dplyr::filter(!is.na(usa_filtros)) %>%
dplyr::select(usa_filtros) %>%
unlist %>%
as.character
parametros$row_filtros = excel_parametros %>%
dplyr::filter(!is.na(row_filtros)) %>%
dplyr::select(row_filtros) %>%
unlist %>%
as.character
parametros$usa_carpeta = excel_parametros %>%             # carpeta
dplyr::filter(!is.na(usa_carpeta)) %>%
dplyr::select(usa_carpeta) %>%
unlist %>%
as.character
parametros$row_carpeta = excel_parametros %>%
dplyr::filter(!is.na(row_carpeta)) %>%
dplyr::select(row_carpeta) %>%
unlist %>%
as.character
parametros$domestico_carpeta = excel_parametros %>%
dplyr::filter(!is.na(domestico_carpeta)) %>%
dplyr::select(domestico_carpeta) %>%
unlist %>%
as.character
parametros$usa_pedido = excel_parametros %>%                # pedido
dplyr::filter(!is.na(usa_pedido)) %>%
dplyr::select(usa_pedido) %>%
unlist %>%
as.character
parametros$row_pedido = excel_parametros %>%
dplyr::filter(!is.na(row_pedido)) %>%
dplyr::select(row_pedido) %>%
unlist %>%
as.character
parametros$domestico_pedido = excel_parametros %>%
dplyr::filter(!is.na(domestico_pedido)) %>%
dplyr::select(domestico_pedido) %>%
unlist %>%
as.character
parametros$usa_fecha_inicio = excel_parametros %>%         # fecha inicio
dplyr::filter(!is.na(usa_fechas)) %>%
dplyr::select(usa_fechas) %>%
unlist %>%
as.character %>%
head(.,n = 1)
parametros$row_fecha_inicio = excel_parametros %>%
dplyr::filter(!is.na(row_fechas)) %>%
dplyr::select(row_fechas) %>%
unlist %>%
as.character %>%
head(.,n = 1)
parametros$domestico_fecha_inicio = excel_parametros %>%
dplyr::filter(!is.na(row_fechas)) %>%
dplyr::select(row_fechas) %>%
unlist %>%
as.character %>%
head(.,n = 1)
parametros$usa_fecha_fin = excel_parametros %>%     # fecha fin
dplyr::filter(!is.na(usa_fin)) %>%
dplyr::select(usa_fin) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$row_fecha_fin = excel_parametros %>%
dplyr::filter(!is.na(row_fin)) %>%
dplyr::select(row_fin) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$domestico_fecha_fin = excel_parametros %>%
dplyr::filter(!is.na(domestico_fin)) %>%
dplyr::select(domestico_fin) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$usa_cantidad_inicio = excel_parametros %>%         # cantidades inicio
dplyr::filter(!is.na(usa_cantidades)) %>%
dplyr::select(usa_cantidades) %>%
unlist %>%
as.character %>%
head(.,n = 1)
parametros$row_cantidades_inicio = excel_parametros %>%
dplyr::filter(!is.na(row_cantidades)) %>%
dplyr::select(row_cantidades) %>%
unlist %>%
as.character %>%
head(.,n = 1)
parametros$domestico_cantidades_inicio = excel_parametros %>%
dplyr::filter(!is.na(row_cantidades)) %>%
dplyr::select(row_cantidades) %>%
unlist %>%
as.character %>%
head(.,n = 1)
parametros$usa_cantidades_cerrado = excel_parametros %>%     # cantidades cerrado
dplyr::filter(!is.na(usa_cantidades)) %>%
dplyr::select(usa_cantidades) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$row_cantidades_cerrado = excel_parametros %>%
dplyr::filter(!is.na(row_cantidades)) %>%
dplyr::select(row_cantidades) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$domestico_cantidades_cerrado = excel_parametros %>%
dplyr::filter(!is.na(domestico_cantidades)) %>%
dplyr::select(domestico_cantidades) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$usa_fechas_benchmark = excel_parametros %>%
dplyr::filter(!is.na(usa_fechas_benchmark)) %>%
dplyr::select(usa_fechas_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$row_fechas_benchmark = excel_parametros %>%
dplyr::filter(!is.na(row_fechas_benchmark)) %>%
dplyr::select(row_fechas_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$domestico_fechas_benchmark = excel_parametros %>%
dplyr::filter(!is.na(domestico_fechas_benchmark)) %>%
dplyr::select(domestico_fechas_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$usa_cantidad_benchmark = excel_parametros %>%                    # cantidad benchmarck
dplyr::filter(!is.na(usa_cantidad_benchmark)) %>%
dplyr::select(usa_cantidad_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$row_cantidad_benchmark = excel_parametros %>%
dplyr::filter(!is.na(row_cantidad_benchmark)) %>%
dplyr::select(row_cantidad_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$domestico_cantidad_benchmark = excel_parametros %>%
dplyr::filter(!is.na(domestico_cantidad_benchmark)) %>%
dplyr::select(domestico_cantidad_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
tablas <- list()
tablas$usa <- funcion_cargar_datos(parametros$usa_carpeta,parametros$usa_fechas,parametros$usa_cantidades,parametros$usa_filtros,parametros$usa_pedido, parametros$usa_fechas_benchmark) %>%
dplyr::filter(Zona_de_ventas != 'ninguno') %>%
dplyr::filter(Nombre_Región == 'USA')
tablas$row <- funcion_cargar_datos(parametros$row_carpeta,parametros$row_fechas,parametros$row_cantidades,parametros$row_filtros,parametros$row_pedido, parametros$row_fechas_benchmark) %>%
dplyr::filter(Zona_de_ventas != 'ninguno') %>%
dplyr::filter(Nombre_Región != 'USA')
tablas$domestico <- funcion_cargar_datos(parametros$domestico_carpeta,parametros$domestico_fechas,parametros$domestico_cantidades,parametros$domestico_filtros,parametros$domestico_pedido, parametros$domestico_fechas_benchmark)
if(str_detect(excel_parametros$domestico_benchmark_formula[1],'formula')){   # viendo el pedo de una variable custom
parametros$domestico_fechas_benchmark <- 'fecha_dom_bench_custom'
eval(parse(text = paste0(
'tablas$domestico <- tablas$domestico %>%
mutate(
fecha_dom_bench_custom = ',parametros$domestico_fechas[1],' + 5
)'
)))
}
input <- list()
input$input_filtro_zona <- 'Doméstico'
tablas$sub <- tablas$domestico
f_region <- funcion_asigna_region_variables(input$input_filtro_zona, parametros, input)
head(tablas$sub)
p_region <- f_region
p_tabla <- tablas$sub
p_region
f_graficas <- list()
i=2
k <- p_region$fechas[i] -p_region$fechas[1]
p_region$fechas[i
]
k <- p_tabla$p_region$fechas[i] - p_tabla$p_region$fechas[1]
k
k
p_tabla$p_region$fechas[i]
p_tabla
eval(parse(text = paste0(
'k <- p_tabla$',p_region$fechas[i],' - p_tabla$', p_region$fechas[1]
)))
k
plot(k)
hist(k)
summary(k)
eval(parse(text = paste0(
'k <- p_tabla$',p_region$fechas[i],' - p_tabla$', p_region$fechas[1]
ggplot(k, aes(k)) + geom_density()
)))
k
eval(parse(text = paste0(
'k <- p_tabla$',p_region$fechas[i],' - p_tabla$', p_region$fechas[1]
k <- data.frame(dias = k)
ggplot(k, aes(k)) + geom_density()
)))
k
eval(parse(text = paste0(
'k <- p_tabla$',p_region$fechas[i],' - p_tabla$', p_region$fechas[1]
k <- data.frame(dias = vector(k))
ggplot(k, aes(k)) + geom_density()
)))
k <- data.frame(dias = vector(k))
k <- data.frame(dias = k)
k
head(k)
eval(parse(text = paste0(
'k <- p_tabla$',p_region$fechas[i],' - p_tabla$', p_region$fechas[1]
k <- data.frame(dias = as.numeric(k))
ggplot(k, aes(k)) + geom_density()
)))
eval(parse(text = paste0(
'k <- p_tabla$',p_region$fechas[i],' - p_tabla$', p_region$fechas[1]
)))
k <- data.frame(dias = as.numeric(k))
head(k)
ggplot(k, aes(dias)) + geom_density()
eval(parse(text = paste0(
'k <- data.frame(
p_tabla$',p_region$fechas, ' = p_tabla$', p_region$fechas, ' - p_tabla$',p_region$fechas[1]
)))
paste0(
'k <- data.frame(
p_tabla$',p_region$fechas, ' = p_tabla$', p_region$fechas, ' - p_tabla$',p_region$fechas[1]
)
paste0(
'p_tabla$',p_region$fechas, ' = p_tabla$', p_region$fechas, ' - p_tabla$',p_region$fechas[1],collapse = ';'
)
parse(text = paste0(
'p_tabla$',p_region$fechas, ' = p_tabla$', p_region$fechas, ' - p_tabla$',p_region$fechas[1],collapse = ';'
))
parse(text = paste0(
p_region$fechas, ' = p_tabla$', p_region$fechas, ' - p_tabla$',p_region$fechas[1],collapse = ';'
))
funcion1 <- paste0(
'data.frame('
)
funcion2 <- paste0(
p_region$fechas, ' = p_tabla$', p_region$fechas, ' - p_tabla$',p_region$fechas[1],collapse = ','
)
funcion3 <- ')'
eval(parse(text = paste0(funcion1,funcion2,funcion3)))
funcion2 <- paste0(
p_region$fechas, ' = as.numeric(p_tabla$',p_region$fechas, ' - p_tabla$',p_region$fechas[1],')',collapse = ','
)
funcion3 <- ')'
eval(parse(text = paste0(funcion1,funcion2,funcion3)))
funcion1 <- paste0(
'f_resumen <- data.frame('
)
funcion2 <- paste0(
p_region$fechas, ' = as.numeric(p_tabla$',p_region$fechas, ' - p_tabla$',p_region$fechas[1],')',collapse = ','
)
funcion3 <- ')'
eval(parse(text = paste0(funcion1,funcion2,funcion3)))
head(f_resumen)
funcion1 <- paste0(
'ggplot(f_resumen)'
)
funcion2 <- paste0(
'+geom_density(',names(f_resumen[2:length(f_resumen)]),')'
)
eval(parse(text = paste0(funcion1,funcion2)))
funcion2
funcion2 <- paste0(
'+geom_density(aes(',names(f_resumen[2:length(f_resumen)]),'))'
)
eval(parse(text = paste0(funcion1,funcion2)))
paste0(funcion1,funcion2))
paste0(funcion1,funcion2)
funcion1 <- paste0(
'ggplot(f_resumen)'
)
funcion2 <- paste0(
'+geom_density(aes(',names(f_resumen[2:length(f_resumen)]),'))'
)
paste0(funcion1,funcion2)
paste0(funcion1,funcion2, collapse = '')
paste0(
'+geom_density(aes(',names(f_resumen[2:length(f_resumen)]),'))'
)
funcion2 <- paste0(
'+geom_density(aes(',names(f_resumen[2:length(f_resumen)]),'))'
,collapse = '+')
eval(parse(text = paste0(funcion1,funcion2)))
paste0(funcion1,funcion2)
funcion1 <- paste0(
'ggplot(f_resumen) +'
)
funcion2 <- paste0(
'geom_density(aes(',names(f_resumen[2:length(f_resumen)]),'))'
,collapse = '+')
eval(parse(text = paste0(funcion1,funcion2)))
funcion3 <- paste0(
'+ xlim(0,50)'
)
eval(parse(text = paste0(funcion1,funcion2,funcion3)))
funcion2 <- paste0(
'geom_density(aes(',names(f_resumen[2:length(f_resumen)]),'), adjust = 1)'
,collapse = '+')
funcion3 <- paste0(
'+ xlim(0,50)'
)
eval(parse(text = paste0(funcion1,funcion2,funcion3)))
funcion2 <- paste0(
'geom_density(aes(',names(f_resumen[2:length(f_resumen)]),'), adjust = 1.5)'
,collapse = '+')
funcion3 <- paste0(
'+ xlim(0,50)'
)
eval(parse(text = paste0(funcion1,funcion2,funcion3)))
funcion2 <- paste0(
'geom_density(aes(',names(f_resumen[2:length(f_resumen)]),'), adjust = 2)'
,collapse = '+')
funcion3 <- paste0(
'+ xlim(0,50)'
)
eval(parse(text = paste0(funcion1,funcion2,funcion3)))
f_resumen
f_resumen_m <- melt(f_resumen)
library(reshape2)
f_resumen_m <- melt(f_resumen)
head(f_resumen)
head(f_resumen_m)
ggplot(f_resumen_m, aes(value, color = variable)) +
geom_density()
ggplot(f_resumen_m, aes(value, color = variable)) +
geom_density() +
xlim(0,50)
funcion1 <- paste0(
'f_resumen <- data.frame('
)
funcion2 <- paste0(
p_region$fechas, ' = as.numeric(p_tabla$',p_region$fechas[2:length(p_region$fechas)], ' - p_tabla$',p_region$fechas[1],')',collapse = ','
)
funcion3 <- ')'
eval(parse(text = paste0(funcion1,funcion2,funcion3)))
f_resumen_m <- melt(f_resumen)
ggplot(f_resumen_m, aes(value, color = variable)) +
geom_density() +
xlim(0,50)
ggplot(f_resumen_m, aes(value, color = variable)) +
geom_density(adjust = 2) +
xlim(0,50)
ggplot(f_resumen_m, aes(value, color = variable, fill = variable)) +
geom_density(adjust = 2) +
xlim(0,50)
ggplot(f_resumen_m, aes(value, color = variable, fill = variable)) +
geom_density(adjust = 2, alpha = .5) +
xlim(0,50)
funcion2 <- paste0(
p_region$fechas[2:length(p_region$fechas)], ' = as.numeric(p_tabla$',p_region$fechas[2:length(p_region$fechas)], ' - p_tabla$',p_region$fechas[1],')',collapse = ','
)
funcion3 <- ')'
eval(parse(text = paste0(funcion1,funcion2,funcion3)))
f_resumen_m <- melt(f_resumen)
ggplot(f_resumen_m, aes(value, color = variable, fill = variable)) +
geom_density(adjust = 2, alpha = .5) +
xlim(0,50)
runApp()
runApp()
runApp()
runApp()
runApp()
