funcion_compresion_fecha <- function(p_tabla, p_variables_fecha, p_variable_agrupacion,p_variables_cantidades){
funcion1 <- paste0('f_tabla <- p_tabla %>%group_by(',p_variable_agrupacion,') %>%summarise(')
funcion2 <- paste0(p_variables_fecha,'_min = min(', p_variables_fecha, ', na.rm = T)', collapse = ',')
funcion3 <- ','
funcion4 <- paste0(p_variables_fecha,'_max = max(', p_variables_fecha, ', na.rm = T)', collapse = ',')
funcion4a <- ','
funcion4b <- paste0(p_variables_cantidades,'_sum = sum(', p_variables_cantidades, ', na.rm = T)', collapse = ',')
funcion5 <- paste0(') %>% data.frame')
eval(parse(text = paste0(funcion1,funcion2,funcion3,funcion4,funcion4a,funcion4b,funcion5)))
for(i in 1:length(f_tabla)){                           # al parecer un infinito en fechas se ve como NA pero para fines prácticos
f_tabla[,i][is.infinite(f_tabla[,i])] <- NA          # sigue siendo una fecha con valor infinito
}
f_fechas <- names(f_tabla)[str_detect(names(f_tabla),'min')]
f_fechas <- c(f_fechas,names(f_tabla)[str_detect(names(f_tabla),'max')])
resultado <- list()
resultado$tabla <- f_tabla
resultado$fechas <- f_fechas
return(resultado)
}
library(shinydashboard)
library(stringr)
library(shinyWidgets)
library(readr)
library(readxl)
library(ggplot2)
library(lubridate)
library(formattable)
library(tidyr)
library(plyr)
library(dplyr)
library(RColorBrewer)
source('gs.R', encoding = "UTF-8")
# source('proceso.R', encoding = "UTF-8")
# source('grafica_fill_rate.R', encoding = "UTF-8")
# source('mapa.R', encoding = "UTF-8")
source('funciones_de_carga.R', encoding = "UTF-8")
source('funciones_graficas.R', encoding = "UTF-8")
source('funciones_interfaz.R', encoding = "UTF-8")
source('funciones_extra.R', encoding = "UTF-8")
excel_parametros <- read_excel('datos/setup/parametros.xlsx') %>% data.frame
for(i in 1:nrow(excel_parametros)){
for(j in 1:length(excel_parametros)){
excel_parametros[i,j] <- str_replace_all(excel_parametros[i,j],' ','_')
}
}
parametros <- list()
parametros$domestico_fechas = excel_parametros %>%
dplyr::filter(!is.na(domestico_fechas)) %>%
dplyr::select(domestico_fechas) %>%
unlist %>%
as.character
parametros$usa_fechas = excel_parametros %>%
dplyr::filter(!is.na(usa_fechas)) %>%
dplyr::select(usa_fechas) %>%
unlist %>%
as.character
parametros$row_fechas = excel_parametros %>%
dplyr::filter(!is.na(row_fechas)) %>%
dplyr::select(row_fechas) %>%
unlist %>%
as.character
parametros$domestico_cantidades = excel_parametros %>%
dplyr::filter(!is.na(domestico_cantidades)) %>%
dplyr::select(domestico_cantidades) %>%
unlist %>%
as.character
parametros$usa_cantidades = excel_parametros %>%
dplyr::filter(!is.na(usa_cantidades)) %>%
dplyr::select(usa_cantidades) %>%
unlist %>%
as.character
parametros$row_cantidades = excel_parametros %>%
dplyr::filter(!is.na(row_cantidades)) %>%
dplyr::select(row_cantidades) %>%
unlist %>%
as.character
parametros$domestico_filtros = excel_parametros %>%
dplyr::filter(!is.na(domestico_filtros)) %>%
dplyr::select(domestico_filtros) %>%
unlist %>%
as.character
parametros$usa_filtros = excel_parametros %>%
dplyr::filter(!is.na(usa_filtros)) %>%
dplyr::select(usa_filtros) %>%
unlist %>%
as.character
parametros$row_filtros = excel_parametros %>%
dplyr::filter(!is.na(row_filtros)) %>%
dplyr::select(row_filtros) %>%
unlist %>%
as.character
parametros$usa_carpeta = excel_parametros %>%
dplyr::filter(!is.na(usa_carpeta)) %>%
dplyr::select(usa_carpeta) %>%
unlist %>%
as.character
parametros$row_carpeta = excel_parametros %>%
dplyr::filter(!is.na(row_carpeta)) %>%
dplyr::select(row_carpeta) %>%
unlist %>%
as.character
parametros$domestico_carpeta = excel_parametros %>%
dplyr::filter(!is.na(domestico_carpeta)) %>%
dplyr::select(domestico_carpeta) %>%
unlist %>%
as.character
parametros$usa_pedido = excel_parametros %>%
dplyr::filter(!is.na(usa_pedido)) %>%
dplyr::select(usa_pedido) %>%
unlist %>%
as.character
parametros$row_pedido = excel_parametros %>%
dplyr::filter(!is.na(row_pedido)) %>%
dplyr::select(row_pedido) %>%
unlist %>%
as.character
parametros$domestico_pedido = excel_parametros %>%
dplyr::filter(!is.na(domestico_pedido)) %>%
dplyr::select(domestico_pedido) %>%
unlist %>%
as.character
usa_fecha_inicio = excel_parametros %>%
dplyr::filter(!is.na(usa_fechas)) %>%
dplyr::select(usa_fechas) %>%
unlist %>%
as.character %>%
head(.,n = 1)
row_fecha_inicio = excel_parametros %>%
dplyr::filter(!is.na(row_fechas)) %>%
dplyr::select(row_fechas) %>%
unlist %>%
as.character %>%
head(.,n = 1)
domestico_fecha_inicio = excel_parametros %>%
dplyr::filter(!is.na(row_fechas)) %>%
dplyr::select(row_fechas) %>%
unlist %>%
as.character %>%
head(.,n = 1)
usa_fecha_cerrado = excel_parametros %>%
dplyr::filter(!is.na(usa_fechas)) %>%
dplyr::select(usa_fechas) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
row_fecha_cerrado = excel_parametros %>%
dplyr::filter(!is.na(row_fechas)) %>%
dplyr::select(row_fechas) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
domestico_fecha_cerrado = excel_parametros %>%
dplyr::filter(!is.na(row_fechas)) %>%
dplyr::select(row_fechas) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
usa_cantidad_inicio = excel_parametros %>%
dplyr::filter(!is.na(usa_cantidades)) %>%
dplyr::select(usa_cantidades) %>%
unlist %>%
as.character %>%
head(.,n = 1)
row_cantidades_inicio = excel_parametros %>%
dplyr::filter(!is.na(row_cantidades)) %>%
dplyr::select(row_cantidades) %>%
unlist %>%
as.character %>%
head(.,n = 1)
domestico_cantidades_inicio = excel_parametros %>%
dplyr::filter(!is.na(row_cantidades)) %>%
dplyr::select(row_cantidades) %>%
unlist %>%
as.character %>%
head(.,n = 1)
usa_cantidades_cerrado = excel_parametros %>%
dplyr::filter(!is.na(usa_cantidades)) %>%
dplyr::select(usa_cantidades) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
row_cantidades_cerrado = excel_parametros %>%
dplyr::filter(!is.na(row_cantidades)) %>%
dplyr::select(row_cantidades) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
domestico_cantidades_cerrado = excel_parametros %>%
dplyr::filter(!is.na(row_cantidades)) %>%
dplyr::select(row_cantidades) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
tablas <- list()
tablas$usa <- funcion_cargar_datos(parametros$usa_carpeta,parametros$usa_fechas,parametros$usa_cantidades,parametros$usa_filtros,parametros$usa_pedido) %>%
dplyr::filter(Zona_de_ventas != 'ninguno') %>%
dplyr::filter(Nombre_Región == 'USA')
tablas$row <- funcion_cargar_datos(parametros$row_carpeta,parametros$row_fechas,parametros$row_cantidades,parametros$row_filtros,parametros$row_pedido) %>%
dplyr::filter(Zona_de_ventas != 'ninguno') %>%
dplyr::filter(Nombre_Región != 'USA')
tablas$domestico <- funcion_cargar_datos(parametros$domestico_carpeta,parametros$domestico_fechas,parametros$domestico_cantidades,parametros$domestico_filtros,parametros$domestico_pedido)
f_resultado <- funcion_compresion_fecha(p_tabla,p_variables_fecha ,p_variable_pedido, p_variables_cantidades)
head(f_resultado$tabla)
head(p_tabla)
f_resultado$tabla$Pedido == '4700847774'
f_resultado$tabla[f_resultado$tabla$Pedido == '4700847774',]
p_tabla[p_tabla$Pedido == '4700847774',]
p_variables_suma <- parametros$domestico_cantidades
p_variables_suma
p_tabla %>% select(p_variables_suma)
p_tabla %>% select(p_variables_suma) %>%
summarise_all(.,.funs = sum)
sum(NA)
sum_x <- function(a){
b <- sum(a, na.rm = T)
if(is.na(b))b <- 0
return(b)
}
p_tabla %>% select(p_variables_suma) %>%
summarise_all(.,.funs = sum_x)
sumas <- p_tabla %>% select(p_variables_suma) %>%
summarise_all(.,.funs = sum_x)
sumas
sumas <- p_tabla %>% select(p_variables_suma) %>%
summarise_all(.,.funs = sum_x) %>%
unlist()
sumas
sumas <- p_tabla %>% select(p_variables_suma) %>%
summarise_all(.,.funs = sum_x) %>%
unlist() %>%
as.numeric
resultado <- list()
resultado$n <- n
resultado$sumas <- sumas
resultado
resultado
n <- nrow(p_tabla)
sumas <- p_tabla %>% select(p_variables_suma) %>%
summarise_all(.,.funs = sum_x) %>%
unlist() %>%
as.numeric
resultado <- list()
resultado$n <- n
resultado$sumas <- sumas
restultado
resultado
nrow(tablas$row)
length(unique(tablas$row$Pedido_SAP))
head(f_tabla)
p_tabla <- tablas$domestico %>% dplyr::filter(Fecha_Are >= '2019-08-01') %>% dplyr::filter(Fecha_Are <= '2019-08-07')
p_texto_x <- 'x'
p_texto_y <- 'y'
p_variables_fecha <- parametros$domestico_fechas
p_variable_pedido <- parametros$domestico_pedido[1]
p_compresion <- TRUE
p_variables_cantidades <- parametros$domestico_cantidades
if(p_compresion){
f_resultado <- funcion_compresion_fecha(p_tabla,p_variables_fecha ,p_variable_pedido, p_variables_cantidades)
f_tabla <- f_resultado[[1]]
f_variables_fecha <- f_resultado[[2]]
}
p_tabla <- f_tabla
p_variables_suma <- parametros$domestico_cantidades
n <- nrow(p_tabla)
sumas <- p_tabla %>% select(p_variables_suma) %>%
summarise_all(.,.funs = sum_x) %>%
unlist() %>%
as.numeric
resultado <- list()
resultado$n <- n
resultado$sumas <- sumas
n <- nrow(p_tabla)
sumas <- p_tabla %>% select(p_variables_suma) %>%
summarise_all(.,.funs = sum_x) %>%
unlist() %>%
as.numeric
parametros$domestico_cantidades
f_tabla
f_resultado <- funcion_compresion_fecha(p_tabla,p_variables_fecha ,p_variable_pedido, p_variables_cantidades)
p_tabla <- tablas$domestico %>% dplyr::filter(Fecha_Are >= '2019-08-01') %>% dplyr::filter(Fecha_Are <= '2019-08-07')
p_texto_x <- 'x'
p_texto_y <- 'y'
p_variables_fecha <- parametros$domestico_fechas
p_variable_pedido <- parametros$domestico_pedido[1]
p_compresion <- TRUE
p_variables_cantidades <- parametros$domestico_cantidades
f_resultado <- funcion_compresion_fecha(p_tabla,p_variables_fecha ,p_variable_pedido, p_variables_cantidades)
f_tabla <- f_resultado[[1]]
f_variables_fecha <- f_resultado[[2]]
p_tabla <- f_tabla
p_variables_suma <- parametros$domestico_cantidades
n <- nrow(p_tabla)
sumas <- p_tabla %>% select(p_variables_suma) %>%
summarise_all(.,.funs = sum_x) %>%
unlist() %>%
as.numeric
head(p_tabla)
p_tabla %>% select(p_variables_suma)
p_tabla <- tablas$domestico %>% dplyr::filter(Fecha_Are >= '2019-08-01') %>% dplyr::filter(Fecha_Are <= '2019-08-07')
p_texto_x <- 'x'
p_texto_y <- 'y'
p_variables_fecha <- parametros$domestico_fechas
p_variable_pedido <- parametros$domestico_pedido[1]
p_compresion <- TRUE
p_variables_cantidades <- parametros$domestico_cantidades
f_resultado <- funcion_compresion_fecha(p_tabla,p_variables_fecha ,p_variable_pedido, p_variables_cantidades)
f_tabla <- f_resultado[[1]]
f_variables_fecha <- f_resultado[[2]]
head(f_tabla)
summary(f_tabla)
p_tabla <- f_tabla
p_variables_suma <- parametros$domestico_cantidades
n <- nrow(p_tabla)
sumas <- p_tabla %>% select(p_variables_suma) %>%
summarise_all(.,.funs = sum_x) %>%
unlist() %>%
as.numeric
funcion_compresion_fecha <- function(p_tabla, p_variables_fecha, p_variable_agrupacion,p_variables_cantidades){
funcion1 <- paste0('f_tabla <- p_tabla %>%group_by(',p_variable_agrupacion,') %>%summarise(')
funcion2 <- paste0(p_variables_fecha,'_min = min(', p_variables_fecha, ', na.rm = T)', collapse = ',')
funcion3 <- ','
funcion4 <- paste0(p_variables_fecha,'_max = max(', p_variables_fecha, ', na.rm = T)', collapse = ',')
funcion4a <- ','
funcion4b <- paste0(p_variables_cantidades,' = sum(', p_variables_cantidades, ', na.rm = T)', collapse = ',')
funcion5 <- paste0(') %>% data.frame')
eval(parse(text = paste0(funcion1,funcion2,funcion3,funcion4,funcion4a,funcion4b,funcion5)))
for(i in 1:length(f_tabla)){                           # al parecer un infinito en fechas se ve como NA pero para fines prácticos
f_tabla[,i][is.infinite(f_tabla[,i])] <- NA          # sigue siendo una fecha con valor infinito
}
f_fechas <- names(f_tabla)[str_detect(names(f_tabla),'min')]
f_fechas <- c(f_fechas,names(f_tabla)[str_detect(names(f_tabla),'max')])
resultado <- list()
resultado$tabla <- f_tabla
resultado$fechas <- f_fechas
return(resultado)
}
p_tabla <- tablas$domestico %>% dplyr::filter(Fecha_Are >= '2019-08-01') %>% dplyr::filter(Fecha_Are <= '2019-08-07')
p_texto_x <- 'x'
p_texto_y <- 'y'
p_variables_fecha <- parametros$domestico_fechas
p_variable_pedido <- parametros$domestico_pedido[1]
p_compresion <- TRUE
p_variables_cantidades <- parametros$domestico_cantidades
f_resultado <- funcion_compresion_fecha(p_tabla,p_variables_fecha ,p_variable_pedido, p_variables_cantidades)
f_tabla <- f_resultado[[1]]
f_variables_fecha <- f_resultado[[2]]
p_tabla <- f_tabla
p_variables_suma <- parametros$domestico_cantidades
n <- nrow(p_tabla)
sumas <- p_tabla %>% select(p_variables_suma) %>%
summarise_all(.,.funs = sum_x) %>%
unlist() %>%
as.numeric
resultado <- list()
resultado$n <- n
resultado$sumas <- sumas
resultados
resultado
head(p_tabla)
summary(p_tabla)
p_variables_cuantos <- parametros$domestico_cantidades
p_tabla %>% select(p_variables_cuantos)
nonoa_x <- function(a){
b <-!is.na(a)
return(b)
}
nona_x <- function(a){
b <-!is.na(a)
return(b)
}
p_tabla %>% select(p_variables_cuantos) %>%
summarise_all(.,.funs = nona_x)
nona_x <- function(a){
b <- sum(!is.na(a))
return(b)
}
p_tabla %>% select(p_variables_cuantos) %>%
summarise_all(.,.funs = nona_x)
fechas
fechas <- p_tabla %>% select(p_variables_cuantos) %>%
summarise_all(.,.funs = nona_x)
fechas
p_variables_cuantos <- parametros$domestico_fechas
fechas <- p_tabla %>% select(p_variables_cuantos) %>%
summarise_all(.,.funs = nona_x)
head(p_tabla)
p_variables_cuantos <- f_variables_fecha
fechas <- p_tabla %>% select(p_variables_cuantos) %>%
summarise_all(.,.funs = nona_x)
fechas
head(tablas$row)
tabla_prueba <- read_excel('C:\Users\Pelishka\Documents\SAP\SAP GUI\tabla_mb51_prueba.XLSX')
tabla_prueba <- read_excel('C:/Users/Pelishka/Documents/SAP/SAP GUI/tabla_mb51_prueba.XLSX')
head(tabla_prueba)
head(tablas$row)
head(tabla_prueba)
match(tablas$row$Pedido_SAP,tabla_prueba$`Documento material`)
sum(!is.n(amatch(tablas$row$Pedido_SAP,tabla_prueba$`Documento material`))
)
sum(!is.na(amatch(tablas$row$Pedido_SAP,tabla_prueba$`Documento material`)))
sum(!is.na(match(tablas$row$Pedido_SAP,tabla_prueba$`Documento material`)))
sum(!is.na(match(tablas$row$Pedido_SAP,tabla_prueba$`Material`)))
sum(!is.na(match(tablas$usa$Pedido_SAP,tabla_prueba$`Documento material`)))
sum(!is.na(match(tablas$usa$Pedido_SAP,tabla_prueba$`Material`)))
sum(!is.na(match(tablas$domestico$Pedido,tabla_prueba$`Material`)))
sum(!is.na(match(tablas$domestico$Pedido,tabla_prueba$`Documento material`)))
resultado
fechas
sumas <- p_tabla %>% select(p_variables_suma) %>%
summarise_all(.,.funs = sum_x)
sumas
resultado <- list()
resultado$n <- n
resultado$sumas <- sumas
resultado$cuantos <- fechas
tabla_prueba <- read_excel('C:/Users/Pelishka/Documents/repositorios/shiny/datos/zsdr159/zsdr159_10_2018_12_2019_12.XLSX')
names(tabla_prueba)
tabla_prueba <- read_excel('C:/Users/Pelishka/Documents/SAP/SAP GUI/tabla_mb51_prueba.XLSX')
tabla_nacional <- read_excel('C:/Users/Pelishka/Documents/repositorios/shiny/datos/zsdr159/zsdr159_10_2018_12_2019_12.XLSX')
names(tabla_prueba)
names(tabla_nacional)
tabla_nacional <- read_excel('C:/Users/Pelishka/Documents/repositorios/shiny/datos/zsdr141/zsdr141filtrado.xlsx')
funcion_parametros_grafica_2 <- function(p_tabla, p_variables_suma,p_variables_cuantos){
n <- nrow(p_tabla)
sumas <- p_tabla %>% select(p_variables_suma) %>%
summarise_all(.,.funs = sum_x)
fechas <- p_tabla %>% select(p_variables_cuantos) %>%
summarise_all(.,.funs = nona_x)
resultado <- list()
resultado$n <- n
resultado$sumas <- sumas
resultado$cuantos <- fechas
}
funcion_parametros_grafica_2 <- function(p_tabla, p_variables_suma,p_variables_cuantos){
n <- nrow(p_tabla)
sumas <- p_tabla %>% select(p_variables_suma) %>%
summarise_all(.,.funs = sum_x)
fechas <- p_tabla %>% select(p_variables_cuantos) %>%
summarise_all(.,.funs = nona_x)
resultado <- list()
resultado$n <- n
resultado$sumas <- sumas
resultado$cuantos <- fechas
return(resultado)
}
f_tabla_resumen <- funcion_parametros_grafica_2(f_tabla,p_variables_cantidades,f_variables_fecha)
f_tabla_resumen
f_tabla_resumen$sumas
p_resumen <- f_tabla_resumen$sumas
p_resumen
f_tabla <- data.frame(variable = names(p_resumen),valor = p_resumen[1,])
f_tabla
p_resumen[1,]
p_resumen[1,] %>% unlist %>% c
p_resumen[1,] %>% unlist %>% as.numeric
f_tabla <- data.frame(variable = names(p_resumen),valor = p_resumen[1,] %>% unlist %>% as.numeric)
f_tabla
ggplot(f_tabla, aes(x = variable, y = valor))
ggplot(f_tabla) +
geom_bar(aes(x = variable, y = valor))
ggplot(f_tabla) +
geom_col(aes(x = variable, y = valor))
f_tabla <- data.frame(variable = as.factor(names(p_resumen), levels = names(p_resumen)),valor = p_resumen[1,] %>% unlist %>% as.numeric)
ggplot(f_tabla) +
geom_col(aes(x = variable, y = valor))
f_tabla <- data.frame(variable = as.factor(names(p_resumen), levels = names(p_resumen)),valor = p_resumen[1,] %>% unlist %>% as.numeric)
ggplot(f_tabla) +
geom_col(aes(x = variable, y = valor))
f_tabla <- data.frame(variable = as.factor(names(p_resumen), levels = names(p_resumen)),valor = p_resumen[1,] %>% unlist %>% as.numeric)
f_tabla <- data.frame(variable = factor(names(p_resumen), levels = names(p_resumen)),valor = p_resumen[1,] %>% unlist %>% as.numeric)
ggplot(f_tabla) +
geom_col(aes(x = variable, y = valor))
ggplot(f_tabla) +
geom_col(aes(x = variable, y = valor), alpha = .5)
ggplot(f_tabla) +
geom_col(aes(x = variable, y = valor), alpha = .5, color = 'darkblue')
ggplot(f_tabla) +
geom_col(aes(x = variable, y = valor), alpha = .5, fill = 'darkblue')
ggplot(f_tabla) +
geom_col(aes(x = variable, y = valor), alpha = .5, fill = 'darkblue', color = 'black')
ggplot(f_tabla) +
geom_col(aes(x = variable, y = valor), alpha = .5, fill = 'darkblue', color = 'black') +
xlab(p_texto_x) +
ylab(p_texto_y)
ggplot(f_tabla) +
geom_col(aes(x = variable, y = valor), alpha = .5, fill = 'darkblue', color = 'black') +
geom_label(aes(x = variable, y = valor, label = variable)) +
xlab(p_texto_x) +
ylab(p_texto_y)
ggplot(f_tabla) +
geom_col(aes(x = variable, y = valor), alpha = .5, fill = 'darkblue', color = 'black') +
geom_label(aes(x = variable, y = valor, label = valor)) +
xlab(p_texto_x) +
ylab(p_texto_y)
ggplot(f_tabla) +
geom_col(aes(x = variable, y = valor), alpha = .5, fill = 'darkblue', color = 'black') +
geom_label(aes(x = variable, y = valor, label = round(valor,1))) +
xlab(p_texto_x) +
ylab(p_texto_y)
ggplot(f_tabla) +
geom_col(aes(x = variable, y = valor), alpha = .5, fill = 'darkblue', color = 'black') +
geom_label(aes(x = variable, y = valor, label = paste0(round(valor,1),' cajas'))) +
xlab(p_texto_x) +
ylab(p_texto_y)
p_texto_label <- 'entregas'
f_tabla <- data.frame(variable = factor(names(p_resumen), levels = names(p_resumen)),valor = p_resumen[1,] %>% unlist %>% as.numeric)
ggplot(f_tabla) +
geom_col(aes(x = variable, y = valor), alpha = .5, fill = 'darkblue', color = 'black') +
geom_label(aes(x = variable, y = valor, label = paste0(round(valor,1),p_texto_label))) +
xlab(p_texto_x) +
ylab(p_texto_y)
f_tabla_resumen
