as.character %>%
tail(.,n = 1)
parametros$domestico_fecha_fin = excel_parametros %>%
dplyr::filter(!is.na(domestico_fin)) %>%
dplyr::select(domestico_fin) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$usa_cantidad_inicio = excel_parametros %>%         # cantidades inicio
dplyr::filter(!is.na(usa_cantidades)) %>%
dplyr::select(usa_cantidades) %>%
unlist %>%
as.character %>%
head(.,n = 1)
parametros$row_cantidades_inicio = excel_parametros %>%
dplyr::filter(!is.na(row_cantidades)) %>%
dplyr::select(row_cantidades) %>%
unlist %>%
as.character %>%
head(.,n = 1)
parametros$domestico_cantidades_inicio = excel_parametros %>%
dplyr::filter(!is.na(row_cantidades)) %>%
dplyr::select(row_cantidades) %>%
unlist %>%
as.character %>%
head(.,n = 1)
parametros$usa_cantidades_cerrado = excel_parametros %>%     # cantidades cerrado
dplyr::filter(!is.na(usa_cantidades)) %>%
dplyr::select(usa_cantidades) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$row_cantidades_cerrado = excel_parametros %>%
dplyr::filter(!is.na(row_cantidades)) %>%
dplyr::select(row_cantidades) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$domestico_cantidades_cerrado = excel_parametros %>%
dplyr::filter(!is.na(domestico_cantidades)) %>%
dplyr::select(domestico_cantidades) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$usa_fechas_benchmark = excel_parametros %>%
dplyr::filter(!is.na(usa_fechas_benchmark)) %>%
dplyr::select(usa_fechas_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$row_fechas_benchmark = excel_parametros %>%
dplyr::filter(!is.na(row_fechas_benchmark)) %>%
dplyr::select(row_fechas_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$domestico_fechas_benchmark = excel_parametros %>%
dplyr::filter(!is.na(domestico_fechas_benchmark)) %>%
dplyr::select(domestico_fechas_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$usa_cantidad_benchmark = excel_parametros %>%                    # cantidad benchmarck
dplyr::filter(!is.na(usa_cantidad_benchmark)) %>%
dplyr::select(usa_cantidad_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$row_cantidad_benchmark = excel_parametros %>%
dplyr::filter(!is.na(row_cantidad_benchmark)) %>%
dplyr::select(row_cantidad_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$domestico_cantidad_benchmark = excel_parametros %>%
dplyr::filter(!is.na(domestico_cantidad_benchmark)) %>%
dplyr::select(domestico_cantidad_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
tablas <- list()
tablas$usa <- funcion_cargar_datos(parametros$usa_carpeta,parametros$usa_fechas,parametros$usa_cantidades,parametros$usa_filtros,parametros$usa_pedido, parametros$usa_fechas_benchmark) %>%
dplyr::filter(Zona_de_ventas != 'ninguno') %>%
dplyr::filter(Nombre_Región == 'USA')
tablas$row <- funcion_cargar_datos(parametros$row_carpeta,parametros$row_fechas,parametros$row_cantidades,parametros$row_filtros,parametros$row_pedido, parametros$row_fechas_benchmark) %>%
dplyr::filter(Zona_de_ventas != 'ninguno') %>%
dplyr::filter(Nombre_Región != 'USA')
tablas$domestico <- funcion_cargar_datos(parametros$domestico_carpeta,parametros$domestico_fechas,parametros$domestico_cantidades,parametros$domestico_filtros,parametros$domestico_pedido, parametros$domestico_fechas_benchmark,parametros$domestico_procesos_incluir)
if(str_detect(excel_parametros$domestico_benchmark_formula[1],'formula')){   # viendo el pedo de una variable custom
parametros$domestico_fechas_benchmark <- 'fecha_dom_bench_custom'
eval(parse(text = paste0(
'tablas$domestico <- tablas$domestico %>%
mutate(
fecha_dom_bench_custom = ',parametros$domestico_fechas[1],' + 5
)'
)))
}
p_tabla <- tablas$domestico %>% dplyr::filter(Fecha_Are >= '2019-08-01') %>% dplyr::filter(Fecha_Are <= '2019-08-03')
p_texto_x <- 'x'
p_texto_y <- 'y'
p_variables_fecha <- parametros$domestico_fechas
p_variable_pedido <- parametros$domestico_pedido[1]
p_compresion <- TRUE
p_variables_cantidades <- parametros$domestico_cantidades
p_fecha_benchmark <- parametros$domestico_fechas_benchmark
p_procesos <- parametros$domestico_procesos_tabla$procesos
if(p_compresion){
f_resultado <- funcion_compresion_fecha(p_tabla,p_variables_fecha ,p_variable_pedido,p_variables_cantidades,p_fecha_benchmark)
f_tabla <- f_resultado$tabla
f_variables_fecha <- f_resultado$fechas
f_variables_benchmark <- f_resultado$fechas_benchmark
}
f_resultado <- funcion_solo_variables_maximo(f_tabla,c(f_variables_fecha,f_variables_benchmark))
f_tabla <- f_resultado$tabla
f_variables_fecha <- f_resultado$variables[-length(f_resultado$variables)]
f_variables_benchmark <- f_resultado$variables[length(f_resultado$variables)]
f_resultado <- funcion_ordena_fechas(f_tabla,f_variables_fecha)
f_tabla <- f_resultado$tabla
f_variables_fecha <- f_resultado$fechas
f_grafica <- funcion_grafica_pedidos_puntos(f_tabla, f_variables_fecha,f_variables_benchmark,p_colorear,p_fecha_actual)
# p_tabla <- tablas$domestico %>% dplyr::filter(Fecha_Are >= '2019-08-01') %>% dplyr::filter(Fecha_Are <= '2019-08-03')
# p_texto_x <- 'x'
# p_texto_y <- 'y'
# p_variables_fecha <- parametros$domestico_fechas
# p_variable_pedido <- parametros$domestico_pedido[1]
# p_compresion <- TRUE
# p_variables_cantidades <- parametros$domestico_cantidades
# p_fecha_benchmark <- parametros$domestico_fechas_benchmark
# p_procesos <- parametros$domestico_procesos_tabla$procesos
p_colorear = TRUE
p_fecha_actual = parametros$fecha_actual
p_parametros = parametros
f_grafica <- funcion_grafica_pedidos_puntos(f_tabla, f_variables_fecha,f_variables_benchmark,p_colorear,p_fecha_actual)
f_grafica <- funcion_grafica_pedidos_puntos(f_tabla, f_variables_fecha,f_variables_benchmark,p_colorear,p_fecha_actual,p_parametros)
p_parametros
p_tabla <- f_tabla
p_variable_wrap <- p_variable_pedido
p_variables_fecha <- f_variables_fecha
p_variables_benchmark <- f_variables_benchmark
p_colorear <- TRUE
p_fecha_actual <- parametros$fecha_actual
names(p_tabla)[1] <- 'pedido'
p_tabla$n <- 1:nrow(p_tabla)
f_tamano_bolas <- 14/(log(nrow(p_tabla)))
f_vector_fechas <- paste0(p_variables_fecha,collapse = ',')
f_colores <- rainbow(length(p_variables_fecha))
eval(parse(text = paste0(
'p_tabla <- p_tabla %>%
mutate(
fecha_min = pmin(',f_vector_fechas,', na.rm = T),
fecha_max = pmax(',f_vector_fechas,', na.rm = T)
)'
)))
f_tabla_leyenda <- data.frame(
variables = factor(p_variables_fecha,levels = p_variables_fecha),
colores = f_colores,
x = max(p_tabla$fecha_max, na.rm = T),
y = 1
)
p_tabla <- eval(parse(text = paste0(
'p_tabla %>%
mutate(
color_valor = as.numeric(',p_variables_benchmark,' - p_fecha_actual),
color = cut(
color_valor,
breaks = c(-Inf,',p_parametros$status_morado,',',p_parametros$status_rojo,',',p_parametros$status_amarillo,',Inf),
labels = c("purple","red","yellow","green")
)
) %>%
arrange(color_valor)'
)))
head(p_tabla)
funcion0 <- paste0(
'g <- ggplot(p_tabla)'
)
if(!p_colorear){
funcion1 <- paste0(
'+ geom_segment(aes(x = fecha_min, xend = fecha_max, y = n, yend = n),color = "darkgrey")'
)
}else{
funcion1 <- paste0(
'+ geom_segment(aes(x = fecha_min, xend = fecha_max, y = n, yend = n),color = p_tabla$color)'
)
}
funcion2a <- paste0(
'+ geom_point(aes(x = ',p_variables_benchmark,', y = n),color = "red",size = ',f_tamano_bolas * 1.5,', alpha = 1,shape = 108)',collapse = ''
)
funcion3a <- paste0(
'+ geom_point(aes(x = ',p_variables_fecha,', y = n),color = "black",size = ',f_tamano_bolas * 1.3,', alpha = 1,shape = 18)',collapse = ''
)
funcion3b <- paste0(
'+ geom_point(aes(x = ',p_variables_fecha,', y = n),color = "',f_colores,'",size = ',f_tamano_bolas,', alpha = 1,shape = 18)',collapse = ''
)
funcion4 <- paste0(
'+ geom_point(data = f_tabla_leyenda, aes(x = x, y = y, color = variables), size = .1)'
)
if(nrow(p_tabla)<=40){
funcion4b <- paste0(
'+ geom_text(aes(x = fecha_min-3, y = n, label = pedido),size = ',f_tamano_bolas * 1,')'
)
}else{
funcion4b <- ''
}
funcion5 <- paste0(
'+ scale_color_manual(labels = c("',paste0(p_variables_fecha,collapse = '","'),'"),values = c("',paste0(f_colores,collapse = '","'),'"))'
)
funcion6 <- paste0(
'+ guides(colour = guide_legend(override.aes = list(size=5, alpha = 1)))'
)
funcion7 <- paste0(
'+ scale_x_date(date_labels="%y %b %d",date_breaks  ="5 days")'
)
funcion8 <- paste0(
'+ theme(axis.text.x = element_text(angle = 90, hjust = 1))'
)
eval(parse(text = paste0(funcion0, funcion1, funcion2a, funcion3a, funcion3b, funcion4, funcion4b, funcion5, funcion6, funcion7, funcion8)))
g
f_grafica <- funcion_grafica_pedidos_puntos(f_tabla, f_variables_fecha,f_variables_benchmark,p_colorear,p_fecha_actual,p_parametros)
f_grafica <- funcion_grafica_pedidos_puntos(f_tabla, f_variables_fecha,f_variables_benchmark,NULL,p_colorear,p_fecha_actual,p_parametros)
f_grafica
runApp()
runApp()
runApp()
library(shinydashboard)
library(stringr)
library(shinyWidgets)
library(readr)
library(readxl)
library(ggplot2)
library(plotly)
library(lubridate)
library(formattable)
library(tidyr)
library(plyr)
library(dplyr)
library(RColorBrewer)
# source('gs.R', encoding = "UTF-8") #mientras vemos qué pedo
nube_cuervo_usuarios <- read_csv('datos/contrasenas.csv')
# source('proceso.R', encoding = "UTF-8")
# source('grafica_fill_rate.R', encoding = "UTF-8")
# source('mapa.R', encoding = "UTF-8")
source('funciones_de_carga.R', encoding = "UTF-8")
source('funciones_graficas.R', encoding = "UTF-8")
source('funciones_interfaz.R', encoding = "UTF-8")
source('funciones_extra.R', encoding = "UTF-8")
excel_parametros <- read_excel('datos/setup/parametros.xlsx') %>% data.frame
for(i in 1:nrow(excel_parametros)){
for(j in 1:length(excel_parametros)){
excel_parametros[i,j] <- str_replace_all(excel_parametros[i,j],' ','_')
}
}
# lectura de las matrices de procesos y flag para ver si se incluyen o no --------------------------------------------------------
excel_domestico_procesos_tabla <- read_excel('datos/setup/matriz_procesos.xlsx',sheet = 'domestico') %>% data.frame
excel_domestico_procesos_incluir <- FALSE
if(excel_domestico_procesos_tabla$activar[1] == 'si'){
excel_domestico_procesos_incluir <- TRUE
}
excel_usa_procesos_tabla <- read_excel('datos/setup/matriz_procesos.xlsx',sheet = 'usa') %>% data.frame
excel_usa_procesos_incluir <- FALSE
if(excel_usa_procesos_tabla$activar[1] == 'si'){
excel_usadomestico_procesos_incluir <- TRUE
}
excel_row_procesos_tabla <- read_excel('datos/setup/matriz_procesos.xlsx',sheet = 'row') %>% data.frame
excel_row_procesos_incluir <- FALSE
if(excel_row_procesos_tabla$activar[1] == 'si'){
excel_row_procesos_incluir <- TRUE
}
parametros <- list()
parametros$fecha_actual = as.Date('2019-08-03')   # fecha
parametros$status_morado = -1
parametros$status_rojo = 0
parametros$status_amarillo = 2
parametros$domestico_procesos_tabla = excel_domestico_procesos_tabla        # tablas de procesos
parametros$domestico_procesos_incluir = excel_domestico_procesos_incluir
parametros$usa_procesos_tabla = excel_usa_procesos_tabla
parametros$usa_procesos_incluir = excel_usa_procesos_incluir
parametros$row_procesos_tabla = excel_row_procesos_tabla
parametros$row_procesos_incluir = excel_row_procesos_incluir
parametros$domestico_fechas = excel_parametros %>%        #fechas
dplyr::filter(!is.na(domestico_fechas)) %>%
dplyr::select(domestico_fechas) %>%
unlist %>%
as.character
parametros$usa_fechas = excel_parametros %>%
dplyr::filter(!is.na(usa_fechas)) %>%
dplyr::select(usa_fechas) %>%
unlist %>%
as.character
parametros$row_fechas = excel_parametros %>%
dplyr::filter(!is.na(row_fechas)) %>%
dplyr::select(row_fechas) %>%
unlist %>%
as.character
parametros$domestico_cantidades = excel_parametros %>%     # cantidades
dplyr::filter(!is.na(domestico_cantidades)) %>%
dplyr::select(domestico_cantidades) %>%
unlist %>%
as.character
parametros$usa_cantidades = excel_parametros %>%
dplyr::filter(!is.na(usa_cantidades)) %>%
dplyr::select(usa_cantidades) %>%
unlist %>%
as.character
parametros$row_cantidades = excel_parametros %>%
dplyr::filter(!is.na(row_cantidades)) %>%
dplyr::select(row_cantidades) %>%
unlist %>%
as.character
parametros$domestico_filtros = excel_parametros %>%         # filtros
dplyr::filter(!is.na(domestico_filtros)) %>%
dplyr::select(domestico_filtros) %>%
unlist %>%
as.character
parametros$usa_filtros = excel_parametros %>%
dplyr::filter(!is.na(usa_filtros)) %>%
dplyr::select(usa_filtros) %>%
unlist %>%
as.character
parametros$row_filtros = excel_parametros %>%
dplyr::filter(!is.na(row_filtros)) %>%
dplyr::select(row_filtros) %>%
unlist %>%
as.character
parametros$usa_carpeta = excel_parametros %>%             # carpeta
dplyr::filter(!is.na(usa_carpeta)) %>%
dplyr::select(usa_carpeta) %>%
unlist %>%
as.character
parametros$row_carpeta = excel_parametros %>%
dplyr::filter(!is.na(row_carpeta)) %>%
dplyr::select(row_carpeta) %>%
unlist %>%
as.character
parametros$domestico_carpeta = excel_parametros %>%
dplyr::filter(!is.na(domestico_carpeta)) %>%
dplyr::select(domestico_carpeta) %>%
unlist %>%
as.character
parametros$usa_pedido = excel_parametros %>%                # pedido
dplyr::filter(!is.na(usa_pedido)) %>%
dplyr::select(usa_pedido) %>%
unlist %>%
as.character
parametros$row_pedido = excel_parametros %>%
dplyr::filter(!is.na(row_pedido)) %>%
dplyr::select(row_pedido) %>%
unlist %>%
as.character
parametros$domestico_pedido = excel_parametros %>%
dplyr::filter(!is.na(domestico_pedido)) %>%
dplyr::select(domestico_pedido) %>%
unlist %>%
as.character
parametros$usa_fecha_inicio = excel_parametros %>%         # fecha inicio
dplyr::filter(!is.na(usa_fechas)) %>%
dplyr::select(usa_fechas) %>%
unlist %>%
as.character %>%
head(.,n = 1)
parametros$row_fecha_inicio = excel_parametros %>%
dplyr::filter(!is.na(row_fechas)) %>%
dplyr::select(row_fechas) %>%
unlist %>%
as.character %>%
head(.,n = 1)
parametros$domestico_fecha_inicio = excel_parametros %>%
dplyr::filter(!is.na(row_fechas)) %>%
dplyr::select(row_fechas) %>%
unlist %>%
as.character %>%
head(.,n = 1)
parametros$usa_fecha_fin = excel_parametros %>%     # fecha fin
dplyr::filter(!is.na(usa_fin)) %>%
dplyr::select(usa_fin) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$row_fecha_fin = excel_parametros %>%
dplyr::filter(!is.na(row_fin)) %>%
dplyr::select(row_fin) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$domestico_fecha_fin = excel_parametros %>%
dplyr::filter(!is.na(domestico_fin)) %>%
dplyr::select(domestico_fin) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$usa_cantidad_inicio = excel_parametros %>%         # cantidades inicio
dplyr::filter(!is.na(usa_cantidades)) %>%
dplyr::select(usa_cantidades) %>%
unlist %>%
as.character %>%
head(.,n = 1)
parametros$row_cantidades_inicio = excel_parametros %>%
dplyr::filter(!is.na(row_cantidades)) %>%
dplyr::select(row_cantidades) %>%
unlist %>%
as.character %>%
head(.,n = 1)
parametros$domestico_cantidades_inicio = excel_parametros %>%
dplyr::filter(!is.na(row_cantidades)) %>%
dplyr::select(row_cantidades) %>%
unlist %>%
as.character %>%
head(.,n = 1)
parametros$usa_cantidades_cerrado = excel_parametros %>%     # cantidades cerrado
dplyr::filter(!is.na(usa_cantidades)) %>%
dplyr::select(usa_cantidades) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$row_cantidades_cerrado = excel_parametros %>%
dplyr::filter(!is.na(row_cantidades)) %>%
dplyr::select(row_cantidades) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$domestico_cantidades_cerrado = excel_parametros %>%
dplyr::filter(!is.na(domestico_cantidades)) %>%
dplyr::select(domestico_cantidades) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$usa_fechas_benchmark = excel_parametros %>%
dplyr::filter(!is.na(usa_fechas_benchmark)) %>%
dplyr::select(usa_fechas_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$row_fechas_benchmark = excel_parametros %>%
dplyr::filter(!is.na(row_fechas_benchmark)) %>%
dplyr::select(row_fechas_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$domestico_fechas_benchmark = excel_parametros %>%
dplyr::filter(!is.na(domestico_fechas_benchmark)) %>%
dplyr::select(domestico_fechas_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$usa_cantidad_benchmark = excel_parametros %>%                    # cantidad benchmarck
dplyr::filter(!is.na(usa_cantidad_benchmark)) %>%
dplyr::select(usa_cantidad_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$row_cantidad_benchmark = excel_parametros %>%
dplyr::filter(!is.na(row_cantidad_benchmark)) %>%
dplyr::select(row_cantidad_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
parametros$domestico_cantidad_benchmark = excel_parametros %>%
dplyr::filter(!is.na(domestico_cantidad_benchmark)) %>%
dplyr::select(domestico_cantidad_benchmark) %>%
unlist %>%
as.character %>%
tail(.,n = 1)
tablas <- list()
tablas$usa <- funcion_cargar_datos(parametros$usa_carpeta,parametros$usa_fechas,parametros$usa_cantidades,parametros$usa_filtros,parametros$usa_pedido, parametros$usa_fechas_benchmark) %>%
dplyr::filter(Zona_de_ventas != 'ninguno') %>%
dplyr::filter(Nombre_Región == 'USA')
tablas$row <- funcion_cargar_datos(parametros$row_carpeta,parametros$row_fechas,parametros$row_cantidades,parametros$row_filtros,parametros$row_pedido, parametros$row_fechas_benchmark) %>%
dplyr::filter(Zona_de_ventas != 'ninguno') %>%
dplyr::filter(Nombre_Región != 'USA')
tablas$domestico <- funcion_cargar_datos(parametros$domestico_carpeta,parametros$domestico_fechas,parametros$domestico_cantidades,parametros$domestico_filtros,parametros$domestico_pedido, parametros$domestico_fechas_benchmark,parametros$domestico_procesos_incluir)
if(str_detect(excel_parametros$domestico_benchmark_formula[1],'formula')){   # viendo el pedo de una variable custom
parametros$domestico_fechas_benchmark <- 'fecha_dom_bench_custom'
eval(parse(text = paste0(
'tablas$domestico <- tablas$domestico %>%
mutate(
fecha_dom_bench_custom = ',parametros$domestico_fechas[1],' + 5
)'
)))
}
p_tabla <- tablas$domestico %>% dplyr::filter(Fecha_Are >= '2019-08-01') %>% dplyr::filter(Fecha_Are <= '2019-08-03')
p_texto_x <- 'x'
p_texto_y <- 'y'
p_variables_fecha <- parametros$domestico_fechas
p_variable_pedido <- parametros$domestico_pedido[1]
p_compresion <- TRUE
p_variables_cantidades <- parametros$domestico_cantidades
p_fecha_benchmark <- parametros$domestico_fechas_benchmark
p_procesos <- parametros$domestico_procesos_tabla$procesos
p_procesos_incluir = FALSE
p_colorear = TRUE
p_fecha_actual = parametros$fecha_actual
p_parametros = parametros
if(p_compresion){
f_resultado <- funcion_compresion_fecha(p_tabla,p_variables_fecha ,p_variable_pedido,p_variables_cantidades,p_fecha_benchmark)
f_tabla <- f_resultado$tabla
f_variables_fecha <- f_resultado$fechas
f_variables_benchmark <- f_resultado$fechas_benchmark
}
f_resultado <- funcion_solo_variables_maximo(f_tabla,c(f_variables_fecha,f_variables_benchmark))
f_tabla <- f_resultado$tabla
f_variables_fecha <- f_resultado$variables[-length(f_resultado$variables)]
f_variables_benchmark <- f_resultado$variables[length(f_resultado$variables)]
f_resultado <- funcion_ordena_fechas(f_tabla,f_variables_fecha)
f_tabla <- f_resultado$tabla
f_variables_fecha <- f_resultado$fechas
#
#
f_grafica <- funcion_grafica_pedidos_puntos(f_tabla, f_variables_fecha,f_variables_benchmark,NULL,p_colorear,p_fecha_actual,p_parametros)
f_grafica
head(p_tabla)
runApp()
runApp()
runApp()
